FROM almalinux:8

ENV PREFECT_VERSION="3.2.1" \
    PREFECT_HOME="/home/prefect"

ARG GLOBAL_CERT
ARG GLOBAL_INDEX
ARG GLOBAL_INDEX_URL
ARG HOST_UID
ARG HOST_GID
ARG TOOLS_TARBALL_URL

# Optional arguments with empty defaults
ARG HTTP_PROXY=""
ARG HTTPS_PROXY=""
ARG NO_PROXY=""

ENV TRIVY_CACHE_DIR=$PREFECT_HOME/.cache/trivy \
    GRYPE_DB_CACHE_DIR=$PREFECT_HOME/.cache/grype/db \
    XEOL_DB_CACHE_DIR=$PREFECT_HOME/.cache/xeol/db \
    GRYPE_DB_AUTO_UPDATE=false \
    GRYPE_DB_VALIDATE_AGE=false \
    SYFT_CHECK_FOR_APP_UPDATE=false \
    XEOL_DB_AUTO_UPDATE=false \
    PYTHONIOENCODING=utf-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# -----------------------------
# Optional CA Certificate Handling
# -----------------------------
COPY tls-ca-bundle.pem* /tmp/ca.pem
RUN if [ -f /tmp/ca.pem ]; then \
      echo "Installing custom CA certificate..." && \
      mkdir -p /etc/pki/ca-trust/source/anchors && \
      cp /tmp/ca.pem /etc/pki/ca-trust/source/anchors/tls-ca-bundle.pem && \
      update-ca-trust extract && \
      echo "[global]" > /etc/pip.conf && \
      echo "cert = /etc/pki/ca-trust/source/anchors/tls-ca-bundle.pem" >> /etc/pip.conf; \
    else \
      echo "No custom CA certificate provided - skipping installation"; \
    fi


RUN mkdir -p /tmp/keys && \
    chmod 700 /tmp/keys && \
    chown -R ${HOST_UID}:${HOST_GID}  /tmp/keys

# Package manager configuration
RUN echo "[global]" > /etc/pip.conf && \
    if [ -n "$GLOBAL_INDEX" ]; then \
      echo "index = ${GLOBAL_INDEX}" >> /etc/pip.conf; \
    fi && \
    if [ -n "$GLOBAL_INDEX_URL" ]; then \
      echo "index-url = ${GLOBAL_INDEX_URL}" >> /etc/pip.conf; \
    fi && \
    echo "cert = /etc/pki/tls/certs/ca-bundle.crt" >> /etc/pip.conf

# Development tools
RUN dnf group install -y "Development Tools"

# Java 21 installation
RUN dnf install -y java-21-openjdk-devel && \
    dnf clean all && \
    alternatives --install /usr/bin/java java /usr/lib/jvm/java-21/bin/java 1 && \
    alternatives --set java /usr/lib/jvm/java-21/bin/java

ENV JAVA_HOME=/usr/lib/jvm/java-21
ENV PATH="${JAVA_HOME}/bin:$PATH"

# System packages
RUN dnf -y update && \
    dnf module reset -y python36 && \
    dnf install -y \
      bash \
      nc \
      glibc-langpack-en \
      python3.11 \
      python3.11-pip \
      python3.11-devel \
      git \
      wget \
      curl \
      unzip \
      postgresql \
      unixODBC \
      krb5-workstation \
      cyrus-sasl-gssapi \
      dnf-plugins-core && \
    dnf module reset -y maven && \
    dnf module enable -y maven:3.8 && \
    dnf module install -y maven && \
    dnf clean all

# Microsoft ODBC driver
RUN ACCEPT_EULA=Y dnf install -y msodbcsql17 || \
    echo "[WARNING] msodbcsql17 not available â€” skipping"

# Python environment
RUN dnf install -y \
        python3.11 \
        python3.11-pip \
        python3.11-devel && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && \
    alternatives --set python3 /usr/bin/python3.11 && \
    python3.11 -m ensurepip

# Force wheel-only installs, no build isolation
ENV PIP_ONLY_BINARY=:all: \
    PIP_NO_BUILD_ISOLATION=1 \
    PIP_NO_INDEX=0

# Upgrade pip and install base packages
RUN python3.11 -m pip install --no-cache-dir --upgrade pip setuptools==78.1.0 wheel

# Build and install peewee from source (tarball in mirror)
RUN curl -L "${GLOBAL_INDEX_URL}/packages/source/p/peewee/peewee-3.14.4.tar.gz" -o /tmp/peewee.tar.gz && \
    tar -xzf /tmp/peewee.tar.gz -C /tmp && \
    cd /tmp/peewee-3.14.4 && \
    python3.11 -m pip wheel . -w dist && \
    python3.11 -m pip install --no-cache-dir dist/peewee-3.14.4-*.whl && \
    cd / && rm -rf /tmp/peewee*

# Install requirements
COPY requirements.txt /tmp/requirements.txt
RUN test -f /tmp/requirements.txt || (echo "Missing requirements.txt. Run: pip freeze > requirements.txt" && exit 1)
RUN python3.11 -m pip install --no-cache-dir -r /tmp/requirements.txt


# Prefect UI setup
RUN mkdir -p /usr/local/lib/python3.11/site-packages/prefect/server/ui_build && \
    chown -R ${HOST_UID}:${HOST_GID} /usr/local/lib/python3.11/site-packages/prefect/server/ && \
    chmod -R 777 /usr/local/lib/python3.11/site-packages/prefect/server/

# Directory structure
RUN mkdir -p \
      /home/prefect/ \
      /home/prefect/cloned_repositories \
      /home/prefect/storage \
      /home/prefect/output \
      /home/prefect/logs \
      /home/prefect/.ssh \
      /home/prefect/.m2 \
      /home/prefect/.gradle

# User/group configuration
RUN existing_group=$(getent group ${HOST_GID} | cut -d: -f1) && \
    if [ -z "$existing_group" ]; then \
      groupadd -g ${HOST_GID} prefect; \
    else \
      groupmod -n prefect "$existing_group"; \
    fi && \
    existing_user=$(getent passwd ${HOST_UID} | cut -d: -f1) && \
    if [ -z "$existing_user" ]; then \
      useradd -m -u ${HOST_UID} -g prefect prefect; \
    else \
      usermod -l prefect "$existing_user"; \
    fi

# Permissions
RUN mkdir -p /home/prefect && \
    chown -R ${HOST_UID}:${HOST_GID} /home/prefect && \
    chmod -R 777 /home/prefect

# Tools installation
RUN wget --progress=dot:giga -O /tmp/tools.tar.gz "${TOOLS_TARBALL_URL}" \
    || (echo "Error: Failed to download tools tarball" && exit 1) \
 && tar -xzvf /tmp/tools.tar.gz -C / \
 && rm /tmp/tools.tar.gz \
 && chown -R prefect:prefect /usr/local/bin \
 && chmod -R +x /usr/local/bin

# Final permissions
RUN chown prefect:prefect -R /home/prefect/cloned_repositories \
    /home/prefect/storage \
    /home/prefect/output \
    /home/prefect/logs \
    /home/prefect/.cache \
    /home/prefect/.grype \
    /home/prefect/.semgrep \
    /home/prefect/.trivy \
    /home/prefect/.syft \
    /home/prefect/.m2 \
    /home/prefect/.gradle \
    /home/prefect/.ssh

RUN chmod 700 /home/prefect/.ssh && \
    chmod 755 /home/prefect/.m2 && \
    chmod 755 /home/prefect/.gradle

# Configuration files
COPY --chown=prefect:prefect --chmod=644 java.cacerts* /home/prefect/
COPY --chown=prefect:prefect --chmod=644 odbc.ini /etc/odbc.ini
COPY --chown=prefect:prefect --chmod=644 odbcinst.ini /etc/odbcinst.ini

# -----------------------------
# Pip Configuration
# -----------------------------
RUN mkdir -p /home/prefect/.pip && \
    echo -e "[global]\nindex-url = ${GLOBAL_INDEX_URL}\ncert = /etc/pki/tls/certs/ca-bundle.crt" > /home/prefect/.pip/pip.conf

CMD ["/bin/bash"]
