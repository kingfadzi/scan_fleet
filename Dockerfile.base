FROM almalinux:8

ENV PREFECT_VERSION="3.2.1" \
    PREFECT_HOME="/home/prefect"

ARG GLOBAL_CERT
ARG GLOBAL_INDEX
ARG GLOBAL_INDEX_URL
ARG HOST_UID
ARG HOST_GID
ARG TOOLS_TARBALL_URL

# Optional arguments with empty defaults
ARG HTTP_PROXY=""
ARG HTTPS_PROXY=""
ARG NO_PROXY=""


ENV TRIVY_CACHE_DIR=$PREFECT_HOME/.cache/trivy
ENV GRYPE_DB_CACHE_DIR=$PREFECT_HOME/.cache/grype/db
ENV XEOL_DB_CACHE_DIR=$PREFECT_HOME/.cache/xeol/db
ENV GRYPE_DB_AUTO_UPDATE=false
ENV GRYPE_DB_VALIDATE_AGE=false
ENV SYFT_CHECK_FOR_APP_UPDATE=false
ENV XEOL_DB_AUTO_UPDATE=false

ENV PYTHONIOENCODING=utf-8
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

RUN mkdir -p /tmp/keys && \
    chmod 700 /tmp/keys && \
    chown -R ${HOST_UID}:${HOST_GID}  /tmp/keys

RUN [ -f tls-ca-bundle.pem ] && cp tls-ca-bundle.pem /usr/local/share/ca-certificates/ || true

RUN echo "[global]" > /etc/pip.conf && \
    if [ -n "$GLOBAL_INDEX" ]; then \
      echo "index = ${GLOBAL_INDEX}" >> /etc/pip.conf; \
    fi && \
    if [ -n "$GLOBAL_INDEX_URL" ]; then \
      echo "index-url = ${GLOBAL_INDEX_URL}" >> /etc/pip.conf; \
    fi

RUN dnf group install -y "Development Tools"

# Install Java 21 and clean up
RUN dnf install -y java-21-openjdk-devel && \
    dnf clean all && \
    alternatives --install /usr/bin/java java /usr/lib/jvm/java-21/bin/java 1 && \
    alternatives --set java /usr/lib/jvm/java-21/bin/java

# Set JAVA_HOME and update PATH
ENV JAVA_HOME=/usr/lib/jvm/java-21
ENV PATH="${JAVA_HOME}/bin:$PATH"

RUN dnf -y update && \
    dnf module reset -y python36 && \
    dnf install -y \
      bash \
      nc \
      glibc-langpack-en \
      python3.11 \
      python3.11-pip \
      python3.11-devel \
      git \
      wget \
      curl \
      unzip \
      postgresql \
      unixODBC \
      krb5-workstation \
      cyrus-sasl-gssapi \
      dnf-plugins-core && \
    dnf module reset -y maven && \
    dnf module enable -y maven:3.8 && \
    dnf module install -y maven && \
    dnf clean all

RUN ACCEPT_EULA=Y dnf install -y msodbcsql17 || \
    echo "[WARNING] msodbcsql17 not available â€” skipping"

# -----------------------------
# Install Python 3.11 and set as default
# -----------------------------
RUN dnf install -y \
        python3.11 \
        python3.11-pip \
        python3.11-devel && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && \
    alternatives --set python3 /usr/bin/python3.11 && \
    python3 -m ensurepip

# -----------------------------
# Install Python requirements
# -----------------------------
COPY frozen_requirements.txt /tmp/frozen_requirements.txt
RUN test -f /tmp/frozen_requirements.txt || (echo "Missing frozen_requirements.txt. Run: pip freeze > frozen_requirements.txt" && exit 1)
RUN python3 -m pip install --no-cache-dir -r /tmp/frozen_requirements.txt

# FIX: Pre-create UI build directory and set correct permissions
RUN mkdir -p /usr/local/lib/python3.11/site-packages/prefect/server/ui_build && \
    chown -R ${HOST_UID}:${HOST_GID} /usr/local/lib/python3.11/site-packages/prefect/server/ && \
    chmod -R 777 /usr/local/lib/python3.11/site-packages/prefect/server/


RUN mkdir -p \
      /home/prefect/ \
      /home/prefect/cloned_repositories \
      /home/prefect/storage \
      /home/prefect/output \
      /home/prefect/logs \
      /home/prefect/.ssh \
      /home/prefect/.m2 \
      /home/prefect/.gradle

RUN existing_group=$(getent group ${HOST_GID} | cut -d: -f1) && \
    if [ -z "$existing_group" ]; then \
      groupadd -g ${HOST_GID} prefect; \
    else \
      groupmod -n prefect "$existing_group"; \
    fi && \
    existing_user=$(getent passwd ${HOST_UID} | cut -d: -f1) && \
    if [ -z "$existing_user" ]; then \
      useradd -m -u ${HOST_UID} -g prefect prefect; \
    else \
      usermod -l prefect "$existing_user"; \
    fi

# Ensure the PREFECT_HOME directory exists and is writable
RUN mkdir -p /home/prefect && \
    chown -R ${HOST_UID}:${HOST_GID} /home/prefect && \
    chmod -R 777 /home/prefect

RUN wget --progress=dot:giga -O /tmp/tools.tar.gz "${TOOLS_TARBALL_URL}" \
    || (echo "Error: Failed to download tools tarball" && exit 1) \
 && tar -xzvf /tmp/tools.tar.gz -C / \
 && rm /tmp/tools.tar.gz \
 && chown -R prefect:prefect /usr/local/bin \
 && chmod -R +x /usr/local/bin

RUN chown prefect:prefect -R /home/prefect/cloned_repositories
RUN chown prefect:prefect -R /home/prefect/storage
RUN chown prefect:prefect -R /home/prefect/output
RUN chown prefect:prefect -R /home/prefect/logs
RUN chown prefect:prefect -R /home/prefect/.cache
RUN chown prefect:prefect -R /home/prefect/.grype
RUN chown prefect:prefect -R /home/prefect/.semgrep
RUN chown prefect:prefect -R /home/prefect/.trivy
RUN chown prefect:prefect -R /home/prefect/.syft
RUN chown prefect:prefect -R /home/prefect/.m2
RUN chown prefect:prefect -R /home/prefect/.gradle
RUN chown prefect:prefect -R /home/prefect/.ssh

RUN chmod 700 /home/prefect/.ssh
RUN chmod 755 /home/prefect/.m2
RUN chmod 755 /home/prefect/.gradle

COPY --chown=prefect:prefect --chmod=644 java.cacerts* /home/prefect/
COPY --chown=prefect:prefect --chmod=644 odbc.ini /etc/odbc.ini
COPY --chown=prefect:prefect --chmod=644 odbcinst.ini /etc/odbcinst.ini

RUN mkdir -p /home/prefect/.pip && \
    if [ -n "$GLOBAL_CERT" ]; then \
      echo -e "[global]\ncert = ${GLOBAL_CERT}\nindex-url = ${GLOBAL_INDEX_URL}" > /home/prefect/.pip/pip.conf; \
    else \
      echo -e "[global]\nindex-url = ${GLOBAL_INDEX_URL}" > /home/prefect/.pip/pip.conf; \
    fi

CMD ["/bin/bash"]
